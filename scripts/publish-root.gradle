// Create variables with empty default values
ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.key"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["signing.gitUser"] = ''
ext["signing.gitToken"] = ''

// Sonatype Props
File sonatypePropsFile = project.rootProject.file('sonatype.properties')
if (sonatypePropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(sonatypePropsFile).withCloseable { is ->
        p.load(is)
    }
    p.each {name, value ->
        ext[name] = value
    }
} else {
    // Use system environment variables
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
    ext['signing.keyId'] = System.getenv('SIGNING_KEY_ID')
    ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
    ext["signing.key"] = System.getenv('SIGNING_KEY')
}

// Git Props
File gitPropsFile = project.rootProject.file('github.properties')
if (gitPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(gitPropsFile).withCloseable { is ->
        p.load(is)
    }
    p.each {name, value ->
        ext[name] = value
    }
} else {
    // Use system environment variables
    ext['signing.gitUser'] = System.getenv('GIT_USER')
    ext['signing.gitToken'] = System.getenv('GIT_TOKEN')
}



// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
